{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":49275,"status":"ok","timestamp":1712161640665,"user":{"displayName":"Rafsan Jany","userId":"08721334090885411304"},"user_tz":-360},"id":"YmrhGBsyoeGr","outputId":"c735c04a-174c-4f59-c4ce-389c52e4f709"},"outputs":[{"name":"stdout","output_type":"stream","text":["Mounted at /content/drive\n"]}],"source":["\n","from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zzBgcnTXpOuF"},"outputs":[],"source":["#!pip install pymatreader"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8RQYDrjsyC46"},"outputs":[],"source":["import pandas as pd\n","import numpy as np"]},{"cell_type":"code","execution_count":43,"metadata":{"executionInfo":{"elapsed":469,"status":"ok","timestamp":1712168453203,"user":{"displayName":"Rafsan Jany","userId":"08721334090885411304"},"user_tz":-360},"id":"SHxFx9RQo1Io"},"outputs":[],"source":["def kinz_data(data):\n","  numbodies_list = data[\"kinzData\"]['numbodies']\n","  req_index = []\n","\n","  for i in range(len(numbodies_list)):\n","    if numbodies_list[i]==1:\n","      req_index.append(i)\n","\n","\n","  kinz_arr = np.empty([0,97])\n","\n","  for i in req_index:\n","\n","    timeStamps = np.array(data[\"kinzData\"]['timeStamps'][i])\n","    kinz_x = data[\"kinzData\"]['bodies'][i]['Position3d'][0]\n","    kinz_y = data[\"kinzData\"]['bodies'][i]['Position3d'][1]\n","    kinz_z = data[\"kinzData\"]['bodies'][i]['Position3d'][2]\n","\n","    d = np.concatenate((timeStamps,data[\"kinzData\"]['bodies'][i]['Position3d'][0], data[\"kinzData\"]['bodies'][i]['Position3d'][1],\n","                        data[\"kinzData\"]['bodies'][i]['Position3d'][2]), axis=None)\n","\n","\n","    kinz_arr = np.append(kinz_arr, [d], axis=0)\n","\n","\n","\n","  arr_walking_speed = np.array([data[\"walking_speed\"]]*len(req_index))\n","  arr_trial_num = np.array([data[\"trial_num\"]]*len(req_index))\n","  arr_patientID = np.array([data[\"patientID\"]]*len(req_index))\n","\n","  #res_kinz_arr = np.column_stack((arr_patientID,arr_trial_num,arr_walking_speed,kinz_arr))\n","  return np.column_stack((arr_patientID,arr_trial_num,arr_walking_speed,kinz_arr))\n","\n","\n","\n","\n","\n","\n","def acc_data(data):\n","\n","  arr_walking_speed = np.array([data[\"walking_speed\"]]*len(data[\"accelData\"]['timeStamps']))\n","  arr_stopwatch = np.array([data[\"stopwatch\"]]*len(data[\"accelData\"]['timeStamps']))\n","  arr_trial_num = np.array([data[\"trial_num\"]]*len(data[\"accelData\"]['timeStamps']))\n","  arr_patientID = np.array([data[\"patientID\"]]*len(data[\"accelData\"]['timeStamps']))\n","\n","  #res = np.column_stack((arr_patientID,arr_trial_num,arr_walking_speed,arr_stopwatch,data[\"accelData\"]['timeStamps'],data[\"accelData\"]['timeSeries']))\n","  return np.column_stack((arr_patientID,arr_trial_num,arr_walking_speed,arr_stopwatch,data[\"accelData\"]['timeStamps'],data[\"accelData\"]['timeSeries']))\n","\n","\n","\n","\n","\n","import numpy as np\n","\n","def kinz_time(kinz_data):\n","    frames_num = len(kinz_data)\n","    time_in_sec = np.zeros(frames_num)\n","    time0 = kinz_data[0]  # time zero for the acquisition\n","\n","    for i in range(frames_num):\n","        time_dbl = kinz_data[i] - time0  # relative time (double precision)\n","        time_in_sec[i] = time_dbl / 1e9  # Convert time to seconds.\n","\n","    mean_time_diff = np.mean(np.diff(time_in_sec))  # Mean time difference\n","    fs = 1 / mean_time_diff  # Sampling rate\n","\n","    return time_in_sec, fs"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LLtGHFxto96k"},"outputs":[],"source":["from pymatreader import read_mat\n","import pandas as pd\n","import numpy as np\n","from glob import glob\n","from tqdm.notebook import tqdm\n","\n","#data_path = '/home/iqh4001/Iqram_WCM/MADE Lab/Kinect Project/gait-analysis-main_VT/AI_Frailty-MATLAB/AI_Frailty-MATLAB'\n","\n","data_path = \"/content/drive/MyDrive/Iqram Sir/AI_Frailty-MATLAB_Sample\""]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":423,"status":"ok","timestamp":1712163767228,"user":{"displayName":"Rafsan Jany","userId":"08721334090885411304"},"user_tz":-360},"id":"yFF_mnE4o94S","outputId":"5cb2c68f-d7eb-41d4-b519-f540e57da817"},"outputs":[{"name":"stdout","output_type":"stream","text":["/content/drive/MyDrive/Iqram Sir/AI_Frailty-MATLAB_Sample/001-LO\n","/content/drive/MyDrive/Iqram Sir/AI_Frailty-MATLAB_Sample/002-RJ\n"]}],"source":["all_file_path=[]\n","\n","for i in sorted(glob(data_path+\"/*\")):\n","  all_file_path = all_file_path+glob(i+\"/*.mat\")\n","  print(i)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FQmZJ79Do90d"},"outputs":[],"source":["import os\n","from datetime import datetime\n","\n","current_datetime = datetime.now()\n","formatted_datetime = current_datetime.strftime(\"%Y-%m-%d_%H-%M%p\")\n","\n","#file_save_destination = '/home/iqh4001/Iqram_WCM/MADE Lab/Kinect Project/Output Data/Kinect Data/kinzData_panda_'+formatted_datetime+'.csv'\n","\n","file_save_destination = \"task1.csv\"\n","\n","\n","if os.path.exists(file_save_destination)==False:\n","  pd.DataFrame(np.empty([0,100]), columns=['patientID','trial_num','walking_speed','timeStamps',\n","  'PELVIS_X', 'SPINE_NAVAL_X', 'SPINE_CHEST_X', 'NECK_X', 'CLAVICLE_LEFT_X', 'SHOULDER_LEFT_X', 'ELBOW_LEFT_X', 'WRIST_LEFT_X', 'HAND_LEFT_X', 'HANDTIP_LEFT_X', 'THUMB_LEFT_X', 'CLAVICLE_RIGHT_X', 'SHOULDER_RIGHT_X', 'ELBOW_RIGHT_X', 'WRIST_RIGHT_X', 'HAND_RIGHT_X', 'HANDTIP_RIGHT_X', 'THUMB_RIGHT_X', 'HIP_LEFT_X', 'KNEE_LEFT_X', 'ANKLE_LEFT_X', 'FOOT_LEFT_X', 'HIP_RIGHT_X', 'KNEE_RIGHT_X', 'ANKLE_RIGHT_X', 'FOOT_RIGHT_X', 'HEAD_X', 'NOSE_X', 'EYE_LEFT_X', 'EAR_LEFT_X', 'EYE_RIGHT_X', 'EAR_RIGHT_X',\n","  'PELVIS_Y', 'SPINE_NAVAL_Y', 'SPINE_CHEST_Y', 'NECK_Y', 'CLAVICLE_LEFT_Y', 'SHOULDER_LEFT_Y', 'ELBOW_LEFT_Y', 'WRIST_LEFT_Y', 'HAND_LEFT_Y', 'HANDTIP_LEFT_Y', 'THUMB_LEFT_Y', 'CLAVICLE_RIGHT_Y', 'SHOULDER_RIGHT_Y', 'ELBOW_RIGHT_Y', 'WRIST_RIGHT_Y', 'HAND_RIGHT_Y', 'HANDTIP_RIGHT_Y', 'THUMB_RIGHT_Y', 'HIP_LEFT_Y', 'KNEE_LEFT_Y', 'ANKLE_LEFT_Y', 'FOOT_LEFT_Y', 'HIP_RIGHT_Y', 'KNEE_RIGHT_Y', 'ANKLE_RIGHT_Y', 'FOOT_RIGHT_Y', 'HEAD_Y', 'NOSE_Y', 'EYE_LEFT_Y', 'EAR_LEFT_Y', 'EYE_RIGHT_Y', 'EAR_RIGHT_Y',\n","  'PELVIS_Z', 'SPINE_NAVAL_Z', 'SPINE_CHEST_Z', 'NECK_Z', 'CLAVICLE_LEFT_Z', 'SHOULDER_LEFT_Z', 'ELBOW_LEFT_Z', 'WRIST_LEFT_Z', 'HAND_LEFT_Z', 'HANDTIP_LEFT_Z', 'THUMB_LEFT_Z', 'CLAVICLE_RIGHT_Z', 'SHOULDER_RIGHT_Z', 'ELBOW_RIGHT_Z', 'WRIST_RIGHT_Z', 'HAND_RIGHT_Z', 'HANDTIP_RIGHT_Z', 'THUMB_RIGHT_Z', 'HIP_LEFT_Z', 'KNEE_LEFT_Z', 'ANKLE_LEFT_Z', 'FOOT_LEFT_Z', 'HIP_RIGHT_Z', 'KNEE_RIGHT_Z', 'ANKLE_RIGHT_Z', 'FOOT_RIGHT_Z', 'HEAD_Z', 'NOSE_Z', 'EYE_LEFT_Z', 'EAR_LEFT_Z', 'EYE_RIGHT_Z', 'EAR_RIGHT_Z'\n","                                                ]).to_csv(file_save_destination,index=False)\n","\n","\n","\n","try:\n","\n","  for path in tqdm(all_file_path):\n","    data = read_mat(path)\n","    temp_df = pd.DataFrame(kinz_data(data), columns=['patientID','trial_num','walking_speed','timeStamps',\n","    'PELVIS_X', 'SPINE_NAVAL_X', 'SPINE_CHEST_X', 'NECK_X', 'CLAVICLE_LEFT_X', 'SHOULDER_LEFT_X', 'ELBOW_LEFT_X', 'WRIST_LEFT_X', 'HAND_LEFT_X', 'HANDTIP_LEFT_X', 'THUMB_LEFT_X', 'CLAVICLE_RIGHT_X', 'SHOULDER_RIGHT_X', 'ELBOW_RIGHT_X', 'WRIST_RIGHT_X', 'HAND_RIGHT_X', 'HANDTIP_RIGHT_X', 'THUMB_RIGHT_X', 'HIP_LEFT_X', 'KNEE_LEFT_X', 'ANKLE_LEFT_X', 'FOOT_LEFT_X', 'HIP_RIGHT_X', 'KNEE_RIGHT_X', 'ANKLE_RIGHT_X', 'FOOT_RIGHT_X', 'HEAD_X', 'NOSE_X', 'EYE_LEFT_X', 'EAR_LEFT_X', 'EYE_RIGHT_X', 'EAR_RIGHT_X',\n","    'PELVIS_Y', 'SPINE_NAVAL_Y', 'SPINE_CHEST_Y', 'NECK_Y', 'CLAVICLE_LEFT_Y', 'SHOULDER_LEFT_Y', 'ELBOW_LEFT_Y', 'WRIST_LEFT_Y', 'HAND_LEFT_Y', 'HANDTIP_LEFT_Y', 'THUMB_LEFT_Y', 'CLAVICLE_RIGHT_Y', 'SHOULDER_RIGHT_Y', 'ELBOW_RIGHT_Y', 'WRIST_RIGHT_Y', 'HAND_RIGHT_Y', 'HANDTIP_RIGHT_Y', 'THUMB_RIGHT_Y', 'HIP_LEFT_Y', 'KNEE_LEFT_Y', 'ANKLE_LEFT_Y', 'FOOT_LEFT_Y', 'HIP_RIGHT_Y', 'KNEE_RIGHT_Y', 'ANKLE_RIGHT_Y', 'FOOT_RIGHT_Y', 'HEAD_Y', 'NOSE_Y', 'EYE_LEFT_Y', 'EAR_LEFT_Y', 'EYE_RIGHT_Y', 'EAR_RIGHT_Y',\n","    'PELVIS_Z', 'SPINE_NAVAL_Z', 'SPINE_CHEST_Z', 'NECK_Z', 'CLAVICLE_LEFT_Z', 'SHOULDER_LEFT_Z', 'ELBOW_LEFT_Z', 'WRIST_LEFT_Z', 'HAND_LEFT_Z', 'HANDTIP_LEFT_Z', 'THUMB_LEFT_Z', 'CLAVICLE_RIGHT_Z', 'SHOULDER_RIGHT_Z', 'ELBOW_RIGHT_Z', 'WRIST_RIGHT_Z', 'HAND_RIGHT_Z', 'HANDTIP_RIGHT_Z', 'THUMB_RIGHT_Z', 'HIP_LEFT_Z', 'KNEE_LEFT_Z', 'ANKLE_LEFT_Z', 'FOOT_LEFT_Z', 'HIP_RIGHT_Z', 'KNEE_RIGHT_Z', 'ANKLE_RIGHT_Z', 'FOOT_RIGHT_Z', 'HEAD_Z', 'NOSE_Z', 'EYE_LEFT_Z', 'EAR_LEFT_Z', 'EYE_RIGHT_Z', 'EAR_RIGHT_Z'\n","                                                  ])\n","\n","    columns_to_convert = temp_data.columns.difference(['patientID','trial_num', 'walking_speed'])\n","    temp_data[columns_to_convert] = temp_data[columns_to_convert].astype(float)\n","\n","    k = kinz_time(temp_data[\"timeStamps\"])\n","    temp_data[\"timeStamps\"] = k[0]\n","    temp_df.to_csv(file_save_destination, mode='a', index=False, header=False)\n","\n","\n","except:\n","  print(\"The Subject folder or main path unusual file or folder below.....Please remove the file or the folder.....\")\n","  print(path)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"ncR8Xnq9o9tI"},"outputs":[{"ename":"NameError","evalue":"name 'file_save_destination_1' is not defined","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m\u003cipython-input-50-63eaaa321c61\u003e\u001b[0m in \u001b[0;36m\u003ccell line: 11\u003e\u001b[0;34m()\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0mfile_save_destination\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"task1.csv\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---\u003e 11\u001b[0;31m \u001b[0;32mif\u001b[0m \u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexists\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_save_destination_1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m==\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     12\u001b[0m   \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mempty\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m12\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'patientID'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'trial_num'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'walking_speed'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'stopwatch'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'timeStamps'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'acc_1'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'acc_2'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'acc_3'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'acc_4'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'acc_5'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'acc_6'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'acc_7'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_save_destination_1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'file_save_destination_1' is not defined"]}],"source":["import os\n","from datetime import datetime\n","\n","current_datetime = datetime.now()\n","formatted_datetime = current_datetime.strftime(\"%Y-%m-%d_%H-%M%p\")\n","\n","#file_save_destination_1 = '/home/iqh4001/Iqram_WCM/MADE Lab/Kinect Project/Output Data/ACC Data/ACC_Data_panda_'+formatted_datetime+'.csv'\n","\n","file_save_destination = \"task1.csv\"\n","\n","if os.path.exists(file_save_destination_1)==False:\n","  pd.DataFrame(np.empty([0,12]), columns=['patientID','trial_num','walking_speed','stopwatch','timeStamps','acc_1', 'acc_2', 'acc_3','acc_4', 'acc_5', 'acc_6','acc_7']).to_csv(file_save_destination_1,index=False)\n","\n","\n","\n","\n","for path in tqdm(all_file_path):\n","  data = read_mat(path)\n","  temp_df = pd.DataFrame(acc_data(data), columns=['patientID','trial_num','walking_speed','stopwatch','timeStamps','acc_1', 'acc_2', 'acc_3',\n","                                  'acc_4', 'acc_5', 'acc_6','acc_7'])\n","\n","\n","  columns_to_convert = temp_data.columns.difference(['patientID','trial_num','walking_speed','stopwatch'])\n","  temp_data[columns_to_convert] = temp_data[columns_to_convert].astype(float)\n","\n","  k = kinz_time(temp_data[\"timeStamps\"])\n","  temp_data[\"timeStamps\"] = k[0]\n","\n","  temp_df.to_csv(file_save_destination_1, mode='a', index=False, header=False)\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RhmXAS-zMoYT"},"outputs":[],"source":[]}],"metadata":{"colab":{"name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}